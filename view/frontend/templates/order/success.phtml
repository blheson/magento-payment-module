<?php
$order = $block->getOrder();

if ($order->getIncrementId() && strpos($order->getPayment()->getAdditionalInformation("method_title"), 'Rocketfuel') !== false) {

    $iframeDetails = $block->processOrderWithRKFL($order->getIncrementId());

    if (isset($iframeDetails['error'])) {
        $iframeDetails = false;
    }
} else {
    $iframeDetails = false;
}

?>
<style>
    #Rocketfuel {
        display: block !important;
    }

    #iframeWrapper {
        position: fixed !important;
    }

    .rocketfuel_process_payment {
        text-align: center;
        display: flex;
        justify-content: center;
        align-content: center;
        align-items: baseline;
    }

    #rocketfuel_process_payment_button {
        background-color: #229633;
        border: #229633;
    }

    h3.indicate_text {
        margin: 0;
        font-size: 32px;
        margin-right: 10px;
        color: #fff;
    }

    .loader_rocket {
        border: 1px solid #000000;
        border-top: 1px solid #ffffff;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        animation: spin 0.4s linear infinite;
    }

    .rocket_fuel_payment_overlay_wrapper {
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        align-content: center;
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    #rocket_fuel_payment_overlay_gateway {
        width: 100%;
        top: 0;
        right: 0;
        height: 100%;
        z-index: 100000 !important;
        position: fixed;
        background: rgb(0 0 0 / 93%);
        display: flex;
    }

    #iframeWrapper {

        z-index: 100001 !important;

    }

    .rocket_fuel_payment_overlay_wrapper_gateway {
        width: 100%;
        display: flex;
        align-items: center;
        align-content: center;
        justify-content: center;
    }

    #rocketfuel_retrigger_payment button {
        text-align: center;
        background: #f0833c !important;
        padding: 0px;
        border: none;
        width: 300px;
        padding-bottom: 2px;
        height: 48px;
        font-size: 17px;
        margin-top: 12px;
        border-radius: 3px;
        font-weight: 300;
        color: #fff;
        cursor: pointer;
    }


    #rocketfuel_retrigger_payment {
        display: none;
    }

    #rocketfuel_retrigger_payment button:hover {
        outline: none;
        border: none;

        background-color: #e26f02 !important;
        border-color: #e26f02 !important;

    }

    .rocketfuel_exit_plan_wrapper {
        display: flex;
        text-align: center;
        justify-content: center;
        align-items: center;
        margin-top: 30px;
    }

    .rocketfuel_exit_plan_wrapper figure {
        width: 14px;
        height: 37px;
        margin: 0;
        right: 0px;
        position: relative;
        transition: right 700ms;
        display: inline-block;

    }

    .proceed-forward-rkfl:hover figure {
        right: -6px;
        transition: right 200ms;
    }

    /* .rocketfuel_exit_plan_wrapper:hover a {
                color: #ddd;
            } */

    .rocketfuel_exit_plan_wrapper a.completed-button-rkfl {
        border: 1px solid #ffffff4d;
        border-radius: 4px;
        padding: 2px 10px;

    }

    .rocketfuel_exit_plan_wrapper a.proceed-forward-rkfl {
        padding-right: 10px;
    }

    .rocketfuel_exit_plan_wrapper a {

        text-decoration: none;
        color: #fff !important;
        font-size: 12px;

    }

    .rocketfuel_exit_plan_wrapper a:focus {
        outline: none !important;
        text-decoration: none !important;
        background: transparent !important;
    }
</style>
<div class="checkout-success">
    <?php
    if (strpos($order->getPayment()->getAdditionalInformation("method_title"), 'Rocketfuel') !== false) :
    ?>
        <div id="rocket_fuel_payment_overlay_gateway" style="display:<?= !$iframeDetails ? 'none' : ''; ?>">
            <div class="rocket_fuel_payment_overlay_wrapper_gateway">
                <div id="rocketfuel_before_payment">
                    <div class="rocketfuel_process_payment">
                        <h3 class="indicate_text">Processing Payment</h3> <span>
                            <div class="loader_rocket"></div>
                        </span>
                    </div>
                </div>
                <div id="rocketfuel_retrigger_payment">
                    <button class="action primary" id="rocketfuel_retrigger_payment_button">
                        <?= __('Pay with Rocketfuel') ?>
                    </button>
                    <div class="rocketfuel_exit_plan_wrapper">


                        <a onClick="RocketfuelPaymentEngine.showFinalOrderDetails()" class="proceed-forward-rkfl" style="display: flex;align-items: center;opacity:0.4">Go back
                            &nbsp; <figure style="display: flex;align-content: center;align-items: center;">
                                <!-- <img src="/modules/rocketfuel/assets/img/forward.svg" style="height:14px" alt=""> -->
                            </figure>
                        </a>


                    </div>
                </div>



                <input type="hidden" name="rocket_order_id" value=<?= $order->getIncrementId(); ?>>
                <input type="hidden" name="rocket_environment" value=<?= $block->getEnvironment(); ?>>
                <input type="hidden" name="rocket_user_data" value=<?= $iframeDetails ? $iframeDetails['userData'] : ''; ?>>
                <input type="hidden" name="rest_update_order_url" value="/rest/V1/rocketfuel-update-order">
                <input type="hidden" name="rocket_uuid" value="<?= $iframeDetails ? $iframeDetails['uuid'] : ''; ?>">

            </div>
        </div>
    <?php
    endif;
    ?>

    <?php
    if (!$iframeDetails && strpos($order->getPayment()->getAdditionalInformation("method_title"), 'Rocketfuel') !== false) {
    ?>
        <div style="padding-top: 35px">Notice:
            <span style="color: #ff0000;font-weight: 800;">
                Unfortunately RocketFuel Payment method is not completely configured on this store, contact store admin to complete payment
            </span>
        </div>
    <?php
    }
    ?>

</div>
<script>
    /**
     * Payment Engine object
     */
    const RocketfuelPaymentEngine = {

        order_id: document.querySelector('input[name=rocket_order_id]').value,

        watchIframeShow: false,

        getUUID: function() {
            return document.querySelector('input[name=rocket_uuid]').value;

        },
        getEnvironment: function() {
            let environment = document.querySelector('input[name=rocket_environment]').value;
            return environment || 'prod';
        },
        getUserData: function() {
            let user_data = document.querySelector('input[name=rocket_user_data]').value;

            if (!user_data) return false;

            return JSON.parse(user_data);
        },
        updateOrder: function(result) {
            try {

                let rest_url = document.querySelector("input[name=rest_update_order_url]").value;

                console.log("Response from callback :", result);

                console.log("order_id :", RocketfuelPaymentEngine.order_id);

                let status = "wc-on-hold";
                let result_status = parseInt(result.status);
                if (result_status == 101) {
                    status = "wc-partial-payment";
                }
                if (result_status == 1 || result.status == "completed") {
                    status = "admin_default"; //placeholder to get order status set by seller
                }
                if (result_status == -1) {
                    status = "wc-failed";
                }
                let fd = new FormData();
                fd.append("order_id", RocketfuelPaymentEngine.order_id);
                fd.append("status", status);
                fetch(rest_url, {
                    method: "POST",
                    body: fd
                }).then(res => res.json()).then(result => {
                    console.log(result)

                }).catch(e => {
                    console.log(e)

                })
            } catch (error) {

            }
            RocketfuelPaymentEngine.showFinalOrderDetails();

        },
        showFinalOrderDetails: () => {
            document.getElementById('rocket_fuel_payment_overlay_gateway').remove();
        },
        startPayment: function(autoTriggerState = true) {

            if (!autoTriggerState) {

                document.getElementById('rocketfuel_retrigger_payment_button').innerText = "Preparing Payment window...";
                this.watchIframeShow = true;

            }

            document.getElementById('rocketfuel_retrigger_payment_button').disabled = true;

            let checkIframe = setInterval(() => {

                if (RocketfuelPaymentEngine.rkfl.iframeInfo.iframe) {

                    RocketfuelPaymentEngine.rkfl.initPayment();
                    clearInterval(checkIframe);

                }

            }, 500);

        },
        prepareRetrigger: function() {

            //hide processing payment
            document.getElementById('rocketfuel_before_payment').style.cssText = "visibility:hidden;height:0;width:0";

            //show retrigger button
            document.getElementById('rocketfuel_retrigger_payment_button').disabled = false;
            document.getElementById('rocketfuel_retrigger_payment').style.display = "block";

        },
        prepareProgressMessage: function() {

            //show processing payment
            document.getElementById('rocketfuel_before_payment').style.cssText = "visibility:visible;height:auto;width:auto";

            //hide retrigger button
            document.getElementById('rocketfuel_retrigger_payment_button').innerText = "Resume Payment"; //revert trigger button message

            document.getElementById('rocketfuel_retrigger_payment').style.display = "none";
        },

        windowListener: function() {
            let engine = this;
            window.addEventListener('message', (event) => {

                switch (event.data.type) {
                    case 'rocketfuel_iframe_close':
                        if (document.getElementById('rocketfuel_before_payment'))
                            engine.prepareRetrigger();
                        break;
                    case 'rocketfuel_new_height':
                        if (engine.watchIframeShow && document.getElementById('rocketfuel_before_payment')) {
                            engine.prepareProgressMessage();
                            engine.watchIframeShow = false;

                        }
                        break;
                    default:
                        break;
                }

            })
        },
        initRocketFuel: async function() {
            return new Promise(async (resolve, reject) => {
                if (!RocketFuel) {
                    location.reload();
                    reject();
                }
                let userData = RocketfuelPaymentEngine.getUserData();
                let payload, response, rkflToken;

                RocketfuelPaymentEngine.rkfl = new RocketFuel({
                    environment: RocketfuelPaymentEngine.getEnvironment()
                });

                if (userData.first_name) {
                    payload = {
                        firstName: userData.first_name,
                        lastName: userData.last_name,
                        email: userData.email,
                        merchantAuth: userData.merchant_auth,
                        kycType: 'null',
                        kycDetails: {
                            'DOB': "01-01-1990"
                        }
                    }

                    console.log("Payload for UserData: ", payload);

                    try {
                        if (RocketfuelPaymentEngine.getEnvironment() !== 'prod') { //remove signon details when testing
                            localStorage.removeItem('rkfl_token');
                            localStorage.removeItem('access');
                        }

                        rkflToken = localStorage.getItem('rkfl_token');

                        if (!rkflToken) {

                            response = await RocketfuelPaymentEngine.rkfl.rkflAutoSignUp(payload, RocketfuelPaymentEngine.getEnvironment());


                            if (response) {
                                rkflToken = response.result?.rkflToken;
                            }

                        }

                        const rkflConfig = {
                            uuid: this.getUUID(),
                            callback: RocketfuelPaymentEngine.updateOrder,
                            environment: RocketfuelPaymentEngine.getEnvironment()
                        }

                        if (rkflToken) {
                            rkflConfig.token = rkflToken
                        }

                        console.log("Configuration for RKFL: ", rkflConfig);

                        RocketfuelPaymentEngine.rkfl = new RocketFuel(rkflConfig);

                        resolve(true);

                    } catch (error) {
                        reject();
                    }

                }

                resolve('no auto data');
            })

        },

        init: async function() {

            let engine = this;
            console.log('Start initiating RKFL');

            try {

                await engine.initRocketFuel();

            } catch (error) {
                console.log('error from promise', error)
            }

            console.log('Done initiating RKFL');

            engine.windowListener();

            if (document.getElementById('rocketfuel_retrigger_payment_button')) {
                document.getElementById('rocketfuel_retrigger_payment_button').addEventListener('click', () => {
                    RocketfuelPaymentEngine.startPayment(false);
                });

            }

            engine.startPayment();

        }
    }

    RocketfuelPaymentEngine.init();
</script>